#
# ./commands.conf
#
# Commands for gnarly tasks that make life sweet
#


[matchtable]
chunked = true
filename = command_match_table.py
local = true
is_risky = false
preview_mode = false
run_in_preview = false

# idea for this guy is to let the user search for service KPIs and set their adaptive state, anomoly detection, yada yada to disabled or active
# not implemented or really thought about that much yet
#[kpisak]
#chunked = true
#filename = command_kpisak.py
#local = true

[barocstringformat]
filename = command_baroc_string_format.py
enableheader = true
outputheader = true
requires_srinfo = true
stderr_dest = message
supports_getinfo = true
supports_rawargs = true
supports_multivalues = true

[matchtablerex]
chunked = true
filename = command_match_table_rex.py
local = true
is_risky = false
preview_mode = false
run_in_preview = false

[episodeupdate]
chunked = true
filename = command_episodeupdate.py
local = true
is_risky = 1

[hecit]
chunked = true
filename = command_hecit.py
local = true
is_risky = 1

[rmentity]
chunked = true
filename = command_rmentity.py
local = true
is_risky = 1
#python.version = python2

[adaptivethresholds]
chunked = true
filename = command_adaptive_thresholds.py
local = true
is_risky = 1

[servicedependency]
chunked = true
filename = command_service_dependency.py
local = true
is_risky = 1

[kpiurgency]
chunked = true
filename = command_kpi_urgency.py
local = true
is_risky = 1

[prettyprint]
chunked = true
filename = command_prettyprint.py
local = true
is_risky = 0


[tableoutput]
chunked = true
filename = command_tableoutput.py
local = true
is_risky = 0